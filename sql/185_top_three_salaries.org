#+TITLE:       185. Top Three Salaries
#+AUTHOR:      Richard Wilson
#+DATE:        10/26/2022

#+OPTIONS: ^:{}
#+OPTIONS: todo:nil

* Problem
Difficulty: Hard https://leetcode.com/problems/department-top-three-salaries/submissions/

Table: Employee


| Column Name  | Type    |
+--------------+---------+
| id           | int     |
| name         | varchar |
| salary       | int     |
| departmentId | int     |

id is the primary key column for this table. \\
departmentId is a foreign key of the ID from the Department table. \\
Each row of this table indicates the ID, name, and salary of an employee. It also contains the ID of their department.
 

Table: Department


| Column Name | Type    |
+-------------+---------+
| id          | int     |
| name        | varchar |

id is the primary key column for this table. \\
Each row of this table indicates the ID of a department and its name.
 

A company's executives are interested in seeing who earns the most money in each of the company's departments. A high earner in a department is an employee who has a salary in the top three unique salaries for that department.

Write an SQL query to find the employees who are high earners in each of the departments.

Return the result table in any order.

The query result format is in the following example.

 

Example 1:

Input: \\
Employee table:

| id | name  | salary | departmentId |
+----+-------+--------+--------------+
| 1  | Joe   | 85000  | 1            |
| 2  | Henry | 80000  | 2            |
| 3  | Sam   | 60000  | 2            |
| 4  | Max   | 90000  | 1            |
| 5  | Janet | 69000  | 1            |
| 6  | Randy | 85000  | 1            |
| 7  | Will  | 70000  | 1            |

Department table:

| id | name  |
+----+-------+
| 1  | IT    |
| 2  | Sales |

Output: 

| Department | Employee | Salary |
+------------+----------+--------+
| IT         | Max      | 90000  |
| IT         | Joe      | 85000  |
| IT         | Randy    | 85000  |
| IT         | Will     | 70000  |
| Sales      | Henry    | 80000  |
| Sales      | Sam      | 60000  |

Explanation: 
In the IT department:
- Max earns the highest unique salary
- Both Randy and Joe earn the second-highest unique salary
- Will earns the third-highest unique salary

In the Sales department:
- Henry earns the highest salary
- Sam earns the second-highest salary
- There is no third-highest salary as there are only two employees
* Solution
#+begin_src sql
with ranked_salaries as (
select 
 e.departmentID
 ,e.name
 ,e.salary
 ,dense_rank() over(partition by e.departmentID order by e.salary desc) as salary_rank
from 
 Employee e
)
select 
 d.name as Department
 ,rs.name as Employee
 ,rs.salary as Salary
from 
 ranked_salaries rs
inner join Department d
 on rs.departmentID = d.id
where 
 rs.salary_rank < 4
#+end_src

Success \\
Details \\
Runtime: 990 ms, faster than 41.11% of MS SQL Server online submissions for Department Top Three Salaries. \\
Memory Usage: 0B, less than 100.00% of MS SQL Server online submissions for Department Top Three Salaries.
