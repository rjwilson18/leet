#+TITLE:       3. Longest substring without Repeating Characters
#+AUTHOR:      Richard Wilson
#+DATE:        8/31/22

#+OPTIONS: ^:{}
#+OPTIONS: todo:nil

* Problem
Difficulty: Medium

https://leetcode.com/problems/longest-substring-without-repeating-characters/

Given a string s, find the length of the longest substring without repeating characters.

 

Example 1:

Input: s = "abcabcbb"
Output: 3
Explanation: The answer is "abc", with the length of 3.
Example 2:

Input: s = "bbbbb"
Output: 1
Explanation: The answer is "b", with the length of 1.
Example 3:

Input: s = "pwwkew"
Output: 3
Explanation: The answer is "wke", with the length of 3.
Notice that the answer must be a substring, "pwke" is a subsequence and not a substring.
 

Constraints:

0 <= s.length <= 5 * 104
s consists of English letters, digits, symbols and spaces.
* Solution
#+begin_src python
class Solution:
    def reverse(self,x):
        rev = 0
        while(x != 0):
            pop = x % 10
            print(pop)
            x /= 10
            print(x)
            if rev == 2**31 / 10 and pop > 7:
                return 0
            elif rev == -2**31 / 10 and pop < -8:
                return 0
            rev = rev * 10 + pop
            
        return rev
#+end_src

Success
Details 
Runtime: 725 ms, faster than 12.74% of Python3 online submissions for Longest Substring Without Repeating Characters.
Memory Usage: 14.1 MB, less than 13.92% of Python3 online submissions for Longest Substring Without Repeating Characters.
